(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{212:function(t,e,a){"use strict";a.r(e);var _=a(0),v=Object(_.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git使用","aria-hidden":"true"}},[t._v("#")]),t._v(" git使用")]),t._v(" "),a("h2",{attrs:{id:"项目下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目下载","aria-hidden":"true"}},[t._v("#")]),t._v(" 项目下载")]),t._v(" "),a("p",[t._v("clone 远程工程："),a("code",[t._v("git clone https://XXXX.git")])]),t._v(" "),a("p",[t._v("fetch 远程分支到本地某分支："),a("code",[t._v("git fetch origin")])]),t._v(" "),a("h2",{attrs:{id:"分支的增删查改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支的增删查改","aria-hidden":"true"}},[t._v("#")]),t._v(" 分支的增删查改")]),t._v(" "),a("p",[t._v("查看分支："),a("code",[t._v("git branch")])]),t._v(" "),a("p",[t._v("查看远程所有分支："),a("code",[t._v("git branch -r")])]),t._v(" "),a("p",[t._v("查看本地和远程所有分支："),a("code",[t._v("git branch -a")])]),t._v(" "),a("p",[t._v("创建分支："),a("code",[t._v("git branch [name]")])]),t._v(" "),a("p",[t._v("切换分支："),a("code",[t._v("git checkout [name]")])]),t._v(" "),a("p",[t._v("创建并切换分支："),a("code",[t._v("git checkout -b [name]")])]),t._v(" "),a("p",[t._v("合并某分支到当前分支："),a("code",[t._v("git merge [name]")])]),t._v(" "),a("p",[t._v("把分支推送到远程："),a("code",[t._v("git push origin [name]")])]),t._v(" "),a("p",[t._v("删除本地分支："),a("code",[t._v("git branch (-d | -D)")])]),t._v(" "),a("p",[t._v("删除远程分支："),a("code",[t._v("git push origin -d")])]),t._v(" "),a("p",[t._v("分支重命名："),a("code",[t._v("git branch (-m | -M)")])]),t._v(" "),a("h2",{attrs:{id:"查看提交信息日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看提交信息日志","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看提交信息日志")]),t._v(" "),a("p",[t._v("查看分支最近一次的修改列表："),a("code",[t._v("git status")])]),t._v(" "),a("p",[t._v("查看分支的commit信息(倒叙排列)")]),t._v(" "),a("p",[t._v("git log 查看commit id, Author, Date, commit info")]),t._v(" "),a("p",[t._v("git shortlog 按提交者分类显示提交信息")]),t._v(" "),a("p",[t._v("git log --oneline 只输出commit id 和 commit info")]),t._v(" "),a("p",[t._v("git log --stat 查看增删查改了哪些文件")]),t._v(" "),a("h2",{attrs:{id:"版本回退"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本回退","aria-hidden":"true"}},[t._v("#")]),t._v(" 版本回退")]),t._v(" "),a("p",[t._v("回退到上一版本：git reset --hard HEAD^")]),t._v(" "),a("p",[t._v("回退到上上版本：git reset --hard HEAD^^")]),t._v(" "),a("p",[t._v("回退到上上版本：git reset --hard HEAD~2")]),t._v(" "),a("p",[t._v("回退到某个版本：git reset --hard")]),t._v(" "),a("p",[t._v("强制推送到远程分支：git push -f")]),t._v(" "),a("h3",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("p",[t._v("1、HEAD 指向的版本是当前版本，^ 表示上一个版本，~N 表示上N个版本，可简写")]),t._v(" "),a("p",[t._v("2、git log 可以查看")]),t._v(" "),a("p",[t._v("3、git reflog 可以查看命令历史，用来回到某个未来的版本")]),t._v(" "),a("p",[t._v("文件的添加、提交、拉取、推送、比对、合并")]),t._v(" "),a("p",[t._v("添加新增文件：git add README.md")]),t._v(" "),a("p",[t._v("添加所有新增文件：git add .")]),t._v(" "),a("p",[t._v('暂存变更文件：git stash [save "暂存备注"]')]),t._v(" "),a("p",[t._v("恢复暂存文件：git stash pop")]),t._v(" "),a("p",[t._v('提交变更文件：git commit -m "变更备注"')]),t._v(" "),a("p",[t._v("拉取远程代码：git pull [origin]")]),t._v(" "),a("p",[t._v("推送到远程：git push origin")]),t._v(" "),a("p",[t._v("比对两个分支：git diff")]),t._v(" "),a("p",[t._v("比对两个分支变更的文件列表：git diff --stat")]),t._v(" "),a("p",[t._v("比对本地和远程分支：git diff origin")]),t._v(" "),a("p",[t._v("合并某个分支：git merge")]),t._v(" "),a("p",[t._v("强制覆盖本地分支：")]),t._v(" "),a("p",[t._v("1、"),a("code",[t._v("git fetch --all")]),t._v("\n2、"),a("code",[t._v("git reset --hard origin/")])]),t._v(" "),a("p",[t._v("3、"),a("code",[t._v("git pull")])]),t._v(" "),a("h3",{attrs:{id:"常用选项和其他命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用选项和其他命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用选项和其他命令")]),t._v(" "),a("p",[t._v("git 中部分选项解释")]),t._v(" "),a("p",[a("code",[t._v("-f --force")]),t._v("：强制")]),t._v(" "),a("p",[a("code",[t._v("-d --delete")]),t._v("：删除")]),t._v(" "),a("p",[a("code",[t._v("-D --delete --force")])]),t._v(" "),a("p",[a("code",[t._v("-m --move")]),t._v("：移动或重命名")]),t._v(" "),a("p",[a("code",[t._v("-M --move --force")])]),t._v(" "),a("p",[a("code",[t._v("-r --remote")]),t._v("：远程")]),t._v(" "),a("p",[a("code",[t._v("-a --all")]),t._v("：所有")]),t._v(" "),a("h4",{attrs:{id:"其他命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他命令")]),t._v(" "),a("p",[t._v("清空工程")]),t._v(" "),a("p",[a("code",[t._v("$ git rm -rf")])]),t._v(" "),a("p",[t._v("每隔X秒运行一次git pull：")]),t._v(" "),a("p",[a("code",[t._v("for((i=1;i<=10000;i+=1)); do sleep X && git pull; done")])]),t._v(" "),a("p",[t._v("使用git rebase将一个feature分支变基到master分支")]),t._v(" "),a("p",[a("code",[t._v("$ git checkout feature")])]),t._v(" "),a("p",[a("code",[t._v("$ git rebase master")])]),t._v(" "),a("h3",{attrs:{id:"配置相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置相关","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置相关")]),t._v(" "),a("p",[t._v("查看当前配置： "),a("code",[t._v("git config --list")])]),t._v(" "),a("p",[t._v("修改 git 的 name 和 email ：")]),t._v(" "),a("p",[a("code",[t._v("git config --global user.name [name]")])]),t._v(" "),a("p",[a("code",[t._v("git config --global user.email [email]")])]),t._v(" "),a("p",[t._v("今天不小心删除了本地的store文件夹")]),t._v(" "),a("p",[t._v("Step 1： "),a("code",[t._v("git status查看自己做了什么操作")])]),t._v(" "),a("p",[t._v("Step 2： "),a("code",[t._v("git reset HEAD [ 被删除的文件或文件夹 ]")])]),t._v(" "),a("p",[t._v("Step 3："),a("code",[t._v("git checkout [ 被删除的文件或文件夹 ]")])]),t._v(" "),a("p",[t._v("至此，查看文件已恢复！")]),t._v(" "),a("p",[t._v("一些自我理解")]),t._v(" "),a("p",[a("code",[t._v("origin")]),t._v(" 指的是本地托管在服务器上的仓库的版本 "),a("a",{attrs:{href:"https://blog.csdn.net/u011478909/article/details/77683754",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常用的几个命令")]),t._v("\ngit add "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\ngit commit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxxx'")]),t._v("\ngit push origin master\ngit remote add origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("server address"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\ngit checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b feature_x "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建feature_x并切换到feature_x分支（这个分支仍然是本地分支）")]),t._v("\ngit checkout master "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 切换到master分支")]),t._v("\ngit branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d feature_x "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除feature_x分支")]),t._v("\n\ngit push origin feature_x "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将feature_x推送到远程仓库中，别人才能看得到")]),t._v("\n\ngit push "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更新本地仓库至最新改动")]),t._v("\ngit merge feature_x "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//合并feature_x分支到当前分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可能会出现冲突 conflicts ,需要人肉修改冲突的地方")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//改完之后，再提交")]),t._v("\ngit add 修改的文件名\ngit diff sourch_branch target_branch "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先查看当前分支与所提交到的分支的差异")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 项目发布，打tag")]),t._v("\ngit tag "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("b2e1d63ff "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1b2e1d63ff的意思是git log中产生的提交id前10位字符，")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 丢弃本地更改")]),t._v("\ngit fetch origin\ngit reset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard origin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("master\n\n")])])])])}),[],!1,null,null,null);e.default=v.exports}}]);